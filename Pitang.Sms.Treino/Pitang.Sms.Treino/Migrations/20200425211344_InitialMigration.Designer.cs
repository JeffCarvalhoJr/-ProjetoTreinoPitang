// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pitang.Sms.Treino.Repository.Impl.EFRepository;

namespace Pitang.Sms.Treino.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20200425211344_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Pitang.Sms.Treino.Entities.Chat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("UserModelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserModelId");

                    b.ToTable("Chats");
                });

            modelBuilder.Entity("Pitang.Sms.Treino.Entities.Contacts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdOwner")
                        .HasColumnType("int");

                    b.Property<int>("IdTarget")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("UserContacts");
                });

            modelBuilder.Entity("Pitang.Sms.Treino.Entities.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ChatId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdSource")
                        .HasColumnType("int");

                    b.Property<int>("IdTarget")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<short>("MessageStatusSource")
                        .HasColumnType("smallint");

                    b.Property<short>("MessageStatusTarget")
                        .HasColumnType("smallint");

                    b.Property<string>("UserMessage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ChatId");

                    b.ToTable("UserMessages");
                });

            modelBuilder.Entity("Pitang.Sms.Treino.Entities.Story", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdOwner")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("PostDate")
                        .HasColumnType("datetime2");

                    b.Property<short>("Type")
                        .HasColumnType("smallint");

                    b.Property<string>("UserMessage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserStory");
                });

            modelBuilder.Entity("Pitang.Sms.Treino.Entities.UserModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ChatId")
                        .HasColumnType("int");

                    b.Property<int?>("ContactsId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.HasKey("Id");

                    b.HasIndex("ChatId");

                    b.HasIndex("ContactsId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Pitang.Sms.Treino.Entities.UserProfile", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<byte[]>("ProfileImage")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.ToTable("UsersProfiles");
                });

            modelBuilder.Entity("Pitang.Sms.Treino.Entities.Chat", b =>
                {
                    b.HasOne("Pitang.Sms.Treino.Entities.UserModel", null)
                        .WithMany("ChatRooms")
                        .HasForeignKey("UserModelId");
                });

            modelBuilder.Entity("Pitang.Sms.Treino.Entities.Message", b =>
                {
                    b.HasOne("Pitang.Sms.Treino.Entities.Chat", null)
                        .WithMany("ChatMessages")
                        .HasForeignKey("ChatId");
                });

            modelBuilder.Entity("Pitang.Sms.Treino.Entities.UserModel", b =>
                {
                    b.HasOne("Pitang.Sms.Treino.Entities.Chat", null)
                        .WithMany("Users")
                        .HasForeignKey("ChatId");

                    b.HasOne("Pitang.Sms.Treino.Entities.Contacts", null)
                        .WithMany("ContactBook")
                        .HasForeignKey("ContactsId");
                });

            modelBuilder.Entity("Pitang.Sms.Treino.Entities.UserProfile", b =>
                {
                    b.HasOne("Pitang.Sms.Treino.Entities.UserModel", "User")
                        .WithOne("UserProfile")
                        .HasForeignKey("Pitang.Sms.Treino.Entities.UserProfile", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
